<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <link rel="icon" href="./favicon_io/favicon.ico">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="theme-color" content="#000000">
  <link rel="manifest" href="https://overpass-channels-czhd-git-crypskii-brandons-projects-d6012021.vercel.app/tonconnect-manifest.json">
  <meta name="description" content="Web site created using Vite">
  <link rel="apple-touch-icon" href="./logo.png">
  
  <!-- Load tonweb library before ton-access, to ensure dependencies are available in the correct order -->
  <script src="https://cdn.jsdelivr.net/gh/toncenter/tonweb/dist/tonweb.js"></script>
  <script src="https://cdn.jsdelivr.net/gh/orbs-network/ton-access@2.2.0/dist/index.min.js"></script>
  
  <!-- Web App Manifest -->
  <link rel="manifest" href="./manifest.json">
</head>

<body>
  <nav>
    <ul>
      <li><a href="/">Home</a></li>
      <li><a href="/about">About</a></li>
      <li><a href="/services">Services</a></li>
      <li><a href="/contact">Contact</a></li>
      <li><a href="https://overpass-channels-czhd-git-crypskii-brandons-projects-d6012021.vercel.app/terms-of-use.html">Terms of Use</a></li>
      <li><a href="https://overpass-channels-czhd-git-crypskii-brandons-projects-d6012021.vercel.app/privacy-policy.html">Privacy Policy</a></li>
    </ul>
  </nav>
  <noscript>You need to enable JavaScript to run this app.</noscript>
  <div id="root"></div>
  <script type="module" src="./src/main.tsx"></script> <!-- Load the main.tsx file -->    

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      // Check if TonAccess is defined to proceed with initialization
      if (typeof TonAccess !== 'undefined') {
        TonAccess.getHttpEndpoint({ network: 'testnet' }).then(async (endpoint) => { // Get the decentralized RPC endpoint
            console.log('TonAccess endpoint:', endpoint);
            const tonweb = new TonWeb(new TonWeb.HttpProvider(endpoint)); // Initialize tonweb library
            console.log('TonWeb initialized with endpoint');
            const wallet = tonweb.wallet.createRandom(); // Create a new wallet instance
            const address = wallet.address; // Get the wallet address (public key)
            console.log('Wallet address:', address);
            const balance = await tonweb.getBalance(address); // Fetch the wallet balance
            console.log('Wallet balance:', balance);
            const privateKey = wallet.privateKey; // Retrieve the wallet private key (hex)
            console.log('Wallet private key:', privateKey);
            const publicKey = wallet.publicKey; // Retrieve the wallet public key (hex)
            console.log('Wallet public key:', publicKey);
        }).catch((error) => {
          console.error('Failed to get TonAccess endpoint:', error);
        });
      } else {
        console.error('TonAccess is not defined. Please ensure the ton-access script is loaded correctly.');
      }
    });
  </script>

  <script>
    // Implement and enable functionality when DOM is fully loaded
    document.addEventListener('DOMContentLoaded', function() {
      console.log('Functionality implemented and enabled');
      enableFunctionality();
    });

    function enableFunctionality() {
      // Add event listeners for navigation and user interactions
      console.log('Enabling functionality...');
      document.querySelector('nav').addEventListener('click', handleNavigation);
      initializeComponents(); // Initialize additional components on the page
      setupUserInteractions(); // Set up user interactions like button clicks
      console.log('Functionality enabled');
    }

    function handleNavigation(event) {
      if (event.target.tagName === 'A') {
        event.preventDefault(); // Prevent default link behavior
        const href = event.target.getAttribute('href'); // Get href attribute of clicked link
        console.log(`Navigating to: ${href}`);
        // Implement your navigation logic here (e.g., page transition or AJAX loading)
      }
    }

    function initializeComponents() {
      // Example: Initialize a modal component and add it to the DOM
      console.log('Initializing components...');
      const modal = document.createElement('div');
      modal.id = 'modal';
      modal.style.display = 'none'; // Initially hide the modal
      document.body.appendChild(modal);
      console.log('Components initialized');
    }

    function setupUserInteractions() {
      // Example: Set up a button click interaction to log a message
      console.log('Setting up user interactions...');
      const button = document.createElement('button');
      button.textContent = 'Click me';
      button.addEventListener('click', () => {
        console.log('Button clicked');
        // Implement additional button click logic here (e.g., show modal or trigger an action)
      });
      document.body.appendChild(button);
      console.log('User interactions set up');
    }
  </script>

</body>
</html>